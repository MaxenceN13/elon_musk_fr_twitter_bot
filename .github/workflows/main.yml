# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: deploy in vm
        uses: actions/checkout@v3

      - name: Create and populate config.py file with api key stored in github repository secret
        env:
          TWITTER_API_KEY: ${{ secrets.TWITTER_API_KEY }}
          TWITTER_API_SECRET: ${{ secrets.TWITTER_API_SECRET }}
          TWITTER_ACCESS_TOKEN: ${{ secrets.TWITTER_ACCESS_TOKEN }}
          TWITTER_ACCESS_TOKEN_SECRET: ${{ secrets.TWITTER_ACCESS_TOKEN_SECRET }}
          TWITTER_BEARER_TOKEN: ${{ secrets.TWITTER_BEARER_TOKEN }}
          DEEPL_AUTH_KEY: ${{ secrets.DEEPL_AUTH_KEY }}
        run: |
          touch config.py
          echo TWITTER_API_KEY=\"$TWITTER_API_KEY\" >> config.py
          echo TWITTER_API_SECRET=\"$TWITTER_API_SECRET\" >> config.py
          echo TWITTER_ACCESS_TOKEN=\"$TWITTER_ACCESS_TOKEN\" >> config.py
          echo TWITTER_ACCESS_TOKEN_SECRET=\"$TWITTER_ACCESS_TOKEN_SECRET\" >> config.py
          echo TWITTER_BEARER_TOKEN=\"$TWITTER_BEARER_TOKEN\" >> config.py
          echo DEEPL_AUTH_KEY=\"$DEEPL_AUTH_KEY\" >> config.py
        shell: bash
      
      - name: install buildx
        id: buildx
        uses: crazy-max/ghaction-docker-buildx@v1
        with:
          version: latest
            
      # Runs a single command using the runners shell
      - name: Build docker image
        run: docker buildx build \
          --tag ghcr.io/maxencen13/elonmuskfrbot:latest \
          --platform linux/amd64,linux/arm/v7,linux/arm64 .
        
      - name: Connect to GitHub Contener Repository
        run: |
          echo $CR_PAT | docker login ghcr.io -u MaxenceN13 --password-stdin
        env:
          CR_PAT: ${{ secrets.CR_PAT }}
        
      - name: Push docker image to GitHub Contener Repository
        run: | 
          docker push ghcr.io/maxencen13/elonmuskfrbot:latest
